module "vm" {
  #####################################
  # Do not modify the following lines #
  source = "./module-ec2"

  component = var.component
  project   = var.project
  env       = var.env
  org       = var.org

  #####################################

  ###
  # AMI data
  ###

  #. ami_most_recent (optional, bool):
  #+ If more than one result is returned, use the most recent AMI
  ami_most_recent = true

  #. ami_name (required, string):
  #+ The name of the AMI.
  ami_name = "debian-12-amd64-*"

  #. ami_virtualisation_type (optional, string):
  #+ The AMI virtualization type.
  ami_virtualisation_type = "hvm"

  #. ami_architecture (optional, string):
  #+ The AMI image architecture.
  ami_architecture = "x86_64"

  #. ami_root_device_type (optional, string):
  #+ The AMI type of the root device volume.
  ami_root_device_type = "ebs"

  ###
  # Cloud init template
  ###
  #. file_content (optional, string):
  #+ The content of the file to use if cloud init is used.
  file_content = ""

  ###
  # Security Group
  ###

  #. sg_name (optional, string):
  #+ Name of the security group.
  sg_name = ""

  #. vpc_id (required, string):
  #+ VPC ID used to create the security group.
  vpc_id = ""

  #. sg_ingress_rules (optional, array):
  #+ Configuration block for ingress rules.
  sg_ingress_rules = []

  #. sg_egress_rules (optional, array):
  #+ Configuration block for egress rules.
  sg_egress_rules = [
    {
      description      = "Accept all egress"
      from_port        = 0
      to_port          = 0
      protocol         = "-1"
      cidr_blocks      = ["0.0.0.0/0"]
      ipv6_cidr_blocks = []
      prefix_list_ids  = []
      security_groups  = []
      self             = true
    }
  ]

  #. sg_extra_tags (optional):
  #+ Map of extra tags to assign to the security group.
  sg_extra_tags = {}

  ###
  # EC2
  ###

  #. instance_type (required, string):
  #+ The instance type to use for the instance. "
  instance_type = "t2.micro"

  #. instance_extra_tags (optional):
  #+ A map of tags to assign to the resource.
  instance_extra_tags = {}

  #. key_name (optional, string):
  #+ Key name of the Key Pair to use for the instance
  key_name = ""

  ## EC2-Network

  #. subnet_id (required, string):
  #+ VPC Subnet ID to launch in.
  subnet_id = ""

  #. associate_public_ip_address (optional, boolean):
  #+ Whether to associate a public IP address with an instance in a VPC.
  associate_public_ip_address = true

  ## EC2-Storage

  #.enable_vm_disk_delete_on_termination (optional, boolean):
  #+ Whether the volume should be destroyed on instance termination.
  enable_vm_disk_delete_on_termination = true

  #. enable_vm_disk_encrypted (optional, boolean):
  #+ Whether to enable volume encryption.
  enable_vm_disk_encrypted = false

  #. vm_disk_size (optional, integer):
  #+ Size of the root volume in gibibytes (GiB).
  vm_disk_size = 5

  #. vm_disk_type (optional, string):
  #+ Type of the root volume.
  vm_disk_type = "gp2"

  #. ebs_optimized (optional, bool):
  #+ If true, the launched EC2 instance will be EBS-optimized.
  ebs_optimized = false

  #. volume_extra_tags (optional):
  #+ A map of tags to assign, at instance-creation time, to root and EBS volumes.
  volume_extra_tags = {}
}

